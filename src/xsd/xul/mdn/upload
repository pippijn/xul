#!/usr/bin/env perl

use common::sense;
use constant {
   URL => 'https://developer.mozilla.org/@api/deki/pages/%s/contents?edittime=%s&abort=modified&comment=%s&title=%s',
   CMD => {
      body   => 'xmllint --xpath "/content/body/*" %s',
      title  => 'xmllint --xpath "/content/@title" %s',
      upload => 'curl -s -n --data-binary "@-" "%s"',
   },
};

sub mtime {
   (stat $_[0])[9]
}

sub strmtime {
   use Date::Format;
   my @lt = localtime mtime $_[0];
   strftime '%Y%m%d%H%M%S', @lt
}

sub popen {
   local $/;
   open my $out, '-|', @_
      or die "Cannot open pipe: $!";
   $out = <$out>;
   die "@_: $?" if $?;

   $out
}

my $PAGE = $ARGV[0] or die 'missing page name';
my $XML  = $ARGV[1] or die 'missing XML output file name';
my $REF  = $XML;

$REF =~ s/\.upload/xml/;

#$SIG{__DIE__} = sub { unlink $XML };

sub sysdie {
   if ($? == -1) {
      die "failed to execute: $!\n";
   } elsif ($? & 127) {
      die sprintf "child died with signal %d, %s coredump\n", $? & 127, $? & 128 ? 'with' : 'without';
   } elsif ($? >> 8) {
      die sprintf "child exited with value %d\n", $? >> 8;
   }
}

sub tidy {
   popen (
      'tidy', '-q',
      '--punctuation-wrap', 'yes',
      '--wrap', 0,
      '--sort-attributes', 'alpha',
      '-xml',
      '--output-encoding', 'utf8',
      '--char-encoding', $_[0],
      $_[1]
   );
}

my $xmlout = tidy 'utf8' => $XML;
my $refout = tidy 'utf8' => $REF;

sub writeout {
   open my $fh, '>', $_[0]
      or die "$_[0]: $!";
   print $fh $_[1];
}

if ($xmlout ne $refout) {
   if (0) {
      END { unlink "xmlout-$$", "refout-$$" }
      writeout "xmlout-$$", $xmlout;
      writeout "refout-$$", $refout;
      system 'diff', '-u', "refout-$$", "xmlout-$$";
      sysdie;
   }

   my $CMD = do {
      require Dir::Self;
      my %pageids = do (Dir::Self->__DIR__ . "/pageids.pm");
      require URI::Escape; import URI::Escape;
      my ($title) = (popen sprintf CMD->{title}, $XML) =~ /title="([^"]+)"/;
      my $body = sprintf CMD->{body}, $XML;

      my $MSG = $ENV{COMMENT} or die 'missing commit message (envvar $COMMENT)';
      my $URL = sprintf URL, $pageids{$PAGE}, strmtime ($XML), uri_escape ($MSG), uri_escape ($title);
      my $upload = sprintf CMD->{upload}, $URL;

      "$body | $upload"
   };
   #print "Uploading to $URL\n";
   #print "exec: $CMD\n"; exit 1;
   #exec "echo", $CMD;
   for (popen $CMD) {
      m|<error><status>(\d+)</status><title>(.*?)</title>| and die "Error $1: $2";
      m|<edit status="success">| or die "Edit was not successful";
      #print "$_\n";

      # remove original so it's downloaded from the updated MDN again
      unlink $REF;
   }
}
