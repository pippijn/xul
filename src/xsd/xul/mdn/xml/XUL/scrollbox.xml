<content type="application/x.deki0805+xml" title="scrollbox"><body xmlns:eval="http://mindtouch.com/2007/dekiscript"><div class="noinclude"><span class="script">template.XULRefElem()</span></div> <p>A box that has additional functions that can be used to scroll the content. Note that a <code>scrollbox</code> doesn't cause scrollbars to be displayed. It is intended to be used when an application wants to be able to adjust the scroll position itself. If you just want scrollbars to appear, add <code>style='overflow: auto;'</code>. This may also be used with any other container element.
</p>
<h3 name="Examples"> Examples </h3>
<p>The following shows the XUL for a bunch of labels. They come out in a box. If their container doesn't give enough room to hold them (geometrically) what happens depends on the enclosing elements; often the content is just clipped off on the bottom or right (depending on what's too big to fit). </p>
<pre class="eval">&lt;vbox&gt;
  &lt;label value="01 Four score and seven years ago "/&gt;
  &lt;label value="02 our fathers brought forth on "/&gt;
  &lt;label value="03 this continent, a new nation, "/&gt;
  &lt;label value="04 conceived in Liberty, and "/&gt;
  &lt;label value="05 dedicated to the proposition "/&gt;
  &lt;label value="06 that all men are created equal."/&gt;
&lt;/vbox&gt;
</pre>
<p>The next bunch of labels is similar, but if the container doesn't give enough room for it, scroll bars will sprout out of nowhere and allow the user to scroll around the big content in the small view space. For the most part, the horizontal and vertical scrollbars will independently handle too-tall and too-wide cases, but each scroll bar takes up additional width and so the appearance of one scroll bar can trigger the other one if it's close to the edge anyway. Use <b>overflow:scroll</b> if you want the scroll bars on all the time. </p>
<pre class="eval">&lt;vbox flex="1" style="overflow:auto"&gt;
  &lt;label value="01 Four score and seven years ago "/&gt;
  &lt;label value="02 our fathers brought forth on "/&gt;
  &lt;label value="03 this continent, a new nation, "/&gt;
  &lt;label value="04 conceived in Liberty, and "/&gt;
  &lt;label value="05 dedicated to the proposition "/&gt;
  &lt;label value="06 that all men are created equal."/&gt;
&lt;/vbox&gt;
</pre>
<p>The <b>flex="1"</b> above may or may not be needed, or even desired. In our case an enclosing element also was <b>overflow:auto</b>. If the user made the window smaller, the outer box would get smaller in response and sprout its scroll bars. We wanted our vbox to get smaller and sprout its scroll bars instead. </p><p>Note that this example doesn't use a scrollbox tag;
you only need that tag if you want to programmatically scroll in addition to the automatic scroll bars. </p><p>Note: avoid nested scroll boxes; it's maddening for the experienced user and confusing for the less experienced user. Instead, figure out some other way to lay things out. </p>
<h4 name="Scrolling_a_child_element_into_view"> Scrolling a child element into view </h4>
<p>Looking for the <code>scrollIntoView()</code> method? It doesn't exist in XUL. Do this instead:
<code>
</code></p>
<pre class="eval">   var xpcomInterface = <i>scrollbox_element</i>.boxObject.QueryInterface(
       Components.interfaces.nsIScrollBoxObject);
   xpcomInterface.ensureElementIsVisible(<i>child_element_to_make_visible</i>);
</pre>
<p>
</p><p>See the <code><a class="external" href="http://lxr.mozilla.org/seamonkey/find?string=nsiscrollboxobject">nsIScrollBoxObject</a></code> API for other scroll-related methods.
</p>
<h3 name="Attributes"> Attributes </h3>
<p><span class="script">template.XULAttrInheritedWide()</span>
</p>
<h3 name="Properties"> Properties </h3>
<p><span class="script">template.XULPropInheritedWide()</span>
</p>
<h3 name="Methods"> Methods </h3>
<p><span class="script">template.XULMethInheritedWide()</span>
</p>
<h3 name="Related"> Related </h3>
<p>TBD
</p>
<div class="noinclude">
</div>
<span class="script"> wiki.languages( { "ja": "ja/XUL/scrollbox", "pl": "pl/XUL/scrollbox" } ) </span></body></content>